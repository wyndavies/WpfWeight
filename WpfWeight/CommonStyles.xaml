<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfWeight">



        <!-- Disable the default mouseover animation on buttons -->
        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}" x:Key="myNonAnimButtonStyle">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Border" 
                      BorderThickness="1"
                      Background="{TemplateBinding Background}"
                      BorderBrush="{TemplateBinding BorderBrush}">
                            <ContentPresenter Margin="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    RecognizesAccessKey="True"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- Base button style. Put common bits in here -->
        <Style TargetType="{x:Type Button}" x:Key="myBaseButtonStyle" BasedOn="{StaticResource myNonAnimButtonStyle}">
            
            <Setter Property="BorderBrush" Value="#FF081234"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
        </Style>

        <!-- Add my own button style. This can't be used on the icon buttons as they object mightily (i.e. crash) -->
        <Style TargetType="{x:Type Button}" x:Key="myButtonStyle" BasedOn="{StaticResource myBaseButtonStyle}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="#FF081234" BorderThickness="1">
                        <Border.Effect>
                            <DropShadowEffect
                                    Color="#FF49E0D9"
                                    Direction="325"
                                    ShadowDepth="5"
                                    BlurRadius="5"
                                    Opacity="1"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0,0" StartPoint="1,1">
                        <GradientStop x:Name="ButtonGradientStop1" Color="#FF40DF6D" Offset="0"/>
                        <GradientStop x:Name="ButtonGradientStop2" Color="#FF84DF4D" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                        <GradientStop Color="Black" Offset="0"/>
                        <GradientStop Color="#FF0040FF" Offset="1"/>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="FontFamily" Value="Constantia"/>
            <Setter Property="FontSize" Value="32"/>
            <Setter Property="Width" Value="105"/>
            <Setter Property="Height" Value="44"/>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Control.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FFA4FF6D" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FF60FF8D" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FF202020" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FF2060FF" Duration="0:0:0.5" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Control.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard >
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FF40DF6D" Duration="0:0:0.5" FillBehavior="Stop"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Background).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FF84DF4D" Duration="0:0:0.5" FillBehavior="Stop"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(GradientBrush.GradientStops)[0].(GradientStop.Color)" To="#FF000000" Duration="0:0:0.5" FillBehavior="Stop"/>
                            <ColorAnimation Storyboard.TargetProperty="(Button.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Color)" To="#FF0040FF" Duration="0:0:0.5" FillBehavior="Stop"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>

        </Style>
        <!-- My icon buttons style -->
        <Style TargetType="{x:Type Button}" x:Key="myIconButtonStyle" BasedOn="{StaticResource myBaseButtonStyle}">
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Width" Value="38"/>
            <Setter Property="Height" Value="38"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="Background">
                <Setter.Value>
                    <ImageBrush ImageSource="Images\PlayArrow.png">
                    </ImageBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Opacity" Value="0.7"/>

            <Style.Triggers>
                <EventTrigger RoutedEvent="Control.MouseEnter">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="0.7" To="1.0" Duration="0:0:0.2" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Control.MouseLeave">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1.0" To="0.7" Duration="0:0:0.2" FillBehavior="Stop"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Button.Click">
                    <BeginStoryboard>
                        <Storyboard >
                            <DoubleAnimation Storyboard.TargetProperty="(Button.Opacity)" From="1.0" To="0.2" Duration="0:0:0.05" AutoReverse="True" FillBehavior="HoldEnd"/>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>

        </Style>


    <Style TargetType="{x:Type Label}" x:Key="myLabelStyle" BasedOn="{StaticResource {x:Type Label}}">
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Top"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="86"/>
        <Setter Property="Width" Value="164"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="36"/>
        <Setter Property="FontFamily" Value="Constantia"/>
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0,0" StartPoint="1,1">
                    <GradientStop Color="#FF40DF6D" Offset="0"/>
                    <GradientStop Color="#FF84DF4D" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="Black" Offset="0"/>
                    <GradientStop Color="#FF0040FF" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            >
                        <Border.Effect>
                            <DropShadowEffect
                                    Color="#FF49E0D9"
                                    Direction="315"
                                    ShadowDepth="8"
                                    BlurRadius="5"
                                    Opacity="1"/>
                        </Border.Effect>
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>